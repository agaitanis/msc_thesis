# proto-file: deeplab2/config.proto
# proto-message: ExperimentOptions
#
# Panoptic-DeepLab with Wide ResNet-41 and output stride 16.
#
############### PLEASE READ THIS BEFORE USING THIS CONFIG ###############
# Before using this config, you need to update the following fields:
# - experiment_name: Use a unique experiment name for each experiment.
# - initial_checkpoint: Update the path to the initial checkpoint.
# - train_dataset_options.file_pattern: Update the path to the
#   training set. e.g., your_dataset/train*.tfrecord
# - eval_dataset_options.file_pattern: Update the path to the
#   validation set, e.g., your_dataset/eval*.tfrecord
# - (optional) set merge_semantic_and_instance_with_tf_op: true, if you
#   could successfully compile the provided efficient merging operation
#   under the folder `tensorflow_ops`.
#########################################################################
#
# Wide ResNet-41 improves over Wide ResNet-38 by (1) removing the last residual
# block, and (2) repeating the second last residual block two more times.
#
# References:
# For Wide ResNet-38, see
# - Zifeng Wu, et al. "Wider or deeper: Revisiting the ResNet model for
#   visual recognition." Pattern Recognition, 2019.
# For Wide ResNet-41, see
# - Liang-Chieh Chen, et al. "Naive-Student: Leveraging Semi-Supervised
#   Learning in Video Sequences for Urban Scene Segmentation.", In ECCV, 2020.
# For Panoptic-DeepLab, see
# - Bowen Cheng, et al. "Panoptic-DeepLab: A Simple, Strong, and Fast
#   Baseline for Bottom-Up Panoptic Segmentation." In CVPR, 2020.

# Use a unique experiment_name for each experiment.
experiment_name: "exp_014"
model_options {
  initial_checkpoint: "deeplab2/initial_checkpoints/wide_resnet41_imagenet1k_strong_training_strategy/ckpt-350.index"
  backbone {
    name: "wide_resnet41"
    output_stride: 32 # Default: 16
    drop_path_keep_prob: 0.8
    drop_path_schedule: "linear"
  }
  decoder {
    feature_key: "res5"
    decoder_channels: 256
    aspp_channels: 256
    atrous_rates: 3 # Default: 6
    atrous_rates: 6 # Default: 12
    atrous_rates: 9 # Default: 18
  }
  panoptic_deeplab {
    low_level {
      feature_key: "res3"
      channels_project: 64
    }
    low_level {
      feature_key: "res2"
      channels_project: 32
    }
    instance {
	  enable: false
    }
    semantic_head {
      output_channels: 4
      head_channels: 256
    }
  }
}
trainer_options {
  save_checkpoints_steps: 1000
  save_summaries_steps: 100
  steps_per_loop: 100
  loss_options {
    semantic_loss {
      name: "softmax_cross_entropy"
      weight: 1.0
      top_k_percent: 0.2
    }
  }
  solver_options {
    base_learning_rate: 0.0001 # Default: 0.0001
    training_number_of_steps: 10000
  }
}
train_dataset_options {
  dataset: "cubicasa5k"
  # Update the path to training set.
  file_pattern: "datasets/deeplab2/cubicasa5k/tf_records/train*.tfrecord"
  # Adjust the batch_size accordingly to better fit your GPU/TPU memory.
  # Also see Q1 in g3doc/faq.md.
  batch_size: 8
  crop_size: 513
  crop_size: 513
  # Skip resizing.
  min_resize_value: 0
  max_resize_value: 512
  augmentations {
    min_scale_factor: 0.5
    max_scale_factor: 2.0
    scale_factor_step_size: 0.1
    # autoaugment_policy_name: "simple_classification_policy_magnitude_scale_0.2" # TODO Change
  }
}
eval_dataset_options {
  dataset: "cubicasa5k"
  # Update the path to validation set.
  file_pattern: "datasets/deeplab2/cubicasa5k/tf_records/val*.tfrecord"
  batch_size: 1
  crop_size: 513
  crop_size: 513
  # Skip resizing.
  min_resize_value: 0
  max_resize_value: 512
}
evaluator_options {
  continuous_eval_timeout: -1
  save_predictions: true
  save_raw_predictions: false
  detailed_ap_metrics: True
  eval_interval: 1000
  num_vis_samples: 20
}
